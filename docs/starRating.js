/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/jquery.star-rating-svg.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/jquery.star-rating-svg.js":
/*!***************************************!*\
  !*** ./src/jquery.star-rating-svg.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*\n *  jQuery StarRatingSvg v1.2.0\n *\n *  http://github.com/nashio/star-rating-svg\n *  Author: Ignacio Chavez\n *  hello@ignaciochavez.com\n *  Licensed under MIT\n */\n\n;(function ( $, window, document, undefined ) {\n\n  'use strict';\n\n  // Create the defaults once\n  var pluginName = 'starRating';\n  var noop = function(){};\n  var defaults = {\n    totalStars: 5,\n    useFullStars: false,\n    starShape: 'straight',\n    emptyColor: 'lightgray',\n    hoverColor: 'orange',\n    activeColor: 'gold',\n    ratedColor: 'crimson',\n    useGradient: true,\n    readOnly: false,\n    disableAfterRate: true,\n    baseUrl: false,\n    starGradient: {\n      start: '#FEF7CD',\n      end: '#FF9511'\n    },\n    strokeWidth: 4,\n    strokeColor: 'black',\n    initialRating: 0,\n    starSize: 40,\n    callback: noop,\n    onHover: noop,\n    onLeave: noop\n  };\n\n\t// The actual plugin constructor\n  var Plugin = function( element, options ) {\n    var _rating;\n    var newRating;\n    var roundFn;\n\n    this.element = element;\n    this.$el = $(element);\n    this.settings = $.extend( {}, defaults, options );\n\n    // grab rating if defined on the element\n    _rating = this.$el.data('rating') || this.settings.initialRating;\n\n    // round to the nearest half\n    roundFn = this.settings.forceRoundUp ? Math.ceil : Math.round;\n    newRating = (roundFn( _rating * 2 ) / 2).toFixed(1);\n    this._state = {\n      rating: newRating\n    };\n\n    // create unique id for stars\n    this._uid = Math.floor( Math.random() * 999 );\n\n    // override gradient if not used\n    if( !options.starGradient && !this.settings.useGradient ){\n      this.settings.starGradient.start = this.settings.starGradient.end = this.settings.activeColor;\n    }\n\n    this._defaults = defaults;\n    this._name = pluginName;\n    this.init();\n  };\n\n  var methods = {\n    init: function () {\n      this.renderMarkup();\n      this.addListeners();\n      this.initRating();\n    },\n\n    addListeners: function(){\n      if( this.settings.readOnly ){ return; }\n      this.$stars.on('mouseover', this.hoverRating.bind(this));\n      this.$stars.on('mouseout', this.restoreState.bind(this));\n      this.$stars.on('click', this.handleRating.bind(this));\n    },\n\n    // apply styles to hovered stars\n    hoverRating: function(e){\n      var index = this.getIndex(e);\n      this.paintStars(index, 'hovered');\n      this.settings.onHover(index + 1, this._state.rating, this.$el);\n    },\n\n    // clicked on a rate, apply style and state\n    handleRating: function(e){\n      var index = this.getIndex(e);\n      var rating = index + 1;\n\n      this.applyRating(rating, this.$el);\n      this.executeCallback( rating, this.$el );\n\n      if(this.settings.disableAfterRate){\n        this.$stars.off();\n      }\n    },\n\n    applyRating: function(rating){\n      var index = rating - 1;\n      // paint selected and remove hovered color\n      this.paintStars(index, 'rated');\n      this._state.rating = index + 1;\n      this._state.rated = true;\n    },\n\n    restoreState: function(e){\n      var index = this.getIndex(e);\n      var rating = this._state.rating || -1;\n      // determine star color depending on manually rated\n      var colorType = this._state.rated ? 'rated' : 'active';\n      this.paintStars(rating - 1, colorType);\n      this.settings.onLeave(index + 1, this._state.rating, this.$el);\n    },\n\n    getIndex: function(e){\n      var $target = $(e.currentTarget);\n      var width = $target.width();\n      var side = $(e.target).attr('data-side');\n      var minRating = this.settings.minRating;\n\n      // hovered outside the star, calculate by pixel instead\n      side = (!side) ? this.getOffsetByPixel(e, $target, width) : side;\n      side = (this.settings.useFullStars) ? 'right' : side ;\n\n      // get index for half or whole star\n      var index = $target.index() - ((side === 'left') ? 0.5 : 0);\n\n      // pointer is way to the left, rating should be none\n      index = ( index < 0.5 && (e.offsetX < width / 4) ) ? -1 : index;\n\n      // force minimum rating\n      index = ( minRating && minRating <= this.settings.totalStars && index < minRating ) ? minRating - 1 : index;\n      return index;\n    },\n\n    getOffsetByPixel: function(e, $target, width){\n      var leftX = e.pageX - $target.offset().left;\n      return ( leftX <= (width / 2) && !this.settings.useFullStars) ? 'left' : 'right';\n    },\n\n    initRating: function(){\n      this.paintStars(this._state.rating - 1, 'active');\n    },\n\n    paintStars: function(endIndex, stateClass){\n      var $polygonLeft;\n      var $polygonRight;\n      var leftClass;\n      var rightClass;\n      var s = this.settings;\n\n      $.each(this.$stars, function(index, star){\n        $polygonLeft = $(star).find('[data-side=\"left\"]');\n        $polygonRight = $(star).find('[data-side=\"right\"]');\n        leftClass = rightClass = (index <= endIndex) ? stateClass : 'empty';\n\n        // has another half rating, add half star\n        leftClass = ( index - endIndex === 0.5 ) ? stateClass : leftClass;\n\n        $polygonLeft.attr('class', 'svg-'  + leftClass + '-' + this._uid);\n        $polygonRight.attr('class', 'svg-'  + rightClass + '-' + this._uid);\n\n        // get color for level\n        var ratedColorsIndex = endIndex >= 0 ? Math.ceil(endIndex) : 0;\n\n        var ratedColor;\n        if (s.ratedColors && s.ratedColors.length && s.ratedColors[ratedColorsIndex]) {\n          ratedColor = s.ratedColors[ratedColorsIndex];\n        } else {\n          ratedColor = this._defaults.ratedColor;\n        }\n\n        // only override colors in rated stars and when rated number is valid\n        if (stateClass === 'rated' && endIndex > -1) {\n          // limit to painting only to rated stars, and specific case for half star\n          if (index <= Math.ceil(endIndex) || (index < 1 && endIndex < 0)) { \n            $polygonLeft.attr('style', 'fill:'+ratedColor); \n          } \n          else { //lets you deselect stars \n            $polygonLeft.attr('style', 'stroke-opacity: 0;'); \n          }\n          if (index <= endIndex) { $polygonRight.attr('style', 'fill:'+ratedColor); } \n          else { //lets you deselect stars \n            $polygonRight.attr('style', 'stroke-opacity: 0;'); \n          }\n        }\n      }.bind(this));\n    },\n\n    renderMarkup: function () {\n      var s = this.settings;\n      var baseUrl = s.baseUrl ? location.href.split('#')[0] : '';\n\n      // inject an svg manually to have control over attributes\n      var star = '<div class=\"jq-star\" style=\"width:' + s.starSize+ 'px;  height:' + s.starSize + 'px;\"><svg version=\"1.0\" class=\"jq-star-svg\" shape-rendering=\"geometricPrecision\" xmlns=\"http://www.w3.org/2000/svg\" ' + this.getSvgDimensions(s.starShape) +  ' stroke-width:' + s.strokeWidth + 'px;\" xml:space=\"preserve\"><style type=\"text/css\">.svg-empty-' + this._uid + '{fill:url(' + baseUrl + '#' + this._uid + '_SVGID_1_);}.svg-hovered-' + this._uid + '{fill:url(' + baseUrl + '#' + this._uid + '_SVGID_2_);}.svg-active-' + this._uid + '{fill:url(' + baseUrl + '#' + this._uid + '_SVGID_3_);}.svg-rated-' + this._uid + '{fill:' + s.ratedColor + ';}</style>' +\n\n      this.getLinearGradient(this._uid + '_SVGID_1_', s.emptyColor, s.emptyColor, s.starShape) +\n      this.getLinearGradient(this._uid + '_SVGID_2_', s.hoverColor, s.hoverColor, s.starShape) +\n      this.getLinearGradient(this._uid + '_SVGID_3_', s.starGradient.start, s.starGradient.end, s.starShape) +\n      this.getVectorPath(this._uid, {\n        starShape: s.starShape,\n        strokeWidth: s.strokeWidth,\n        strokeColor: s.strokeColor\n      } ) +\n      '</svg></div>';\n\n      // inject svg markup\n      var starsMarkup = '';\n      for( var i = 0; i < s.totalStars; i++){\n        starsMarkup += star;\n      }\n      this.$el.append(starsMarkup);\n      this.$stars = this.$el.find('.jq-star');\n    },\n\n    getVectorPath: function(id, attrs){\n      return (attrs.starShape === 'rounded') ?\n        this.getRoundedVectorPath(id, attrs) : this.getSpikeVectorPath(id, attrs);\n    },\n\n    getSpikeVectorPath: function(id, attrs){\n      return '<polygon data-side=\"center\" class=\"svg-empty-' + id + '\" points=\"281.1,129.8 364,55.7 255.5,46.8 214,-59 172.5,46.8 64,55.4 146.8,129.7 121.1,241 212.9,181.1 213.9,181 306.5,241 \" style=\"fill: transparent; stroke: ' + attrs.strokeColor + ';\" />' +\n        '<polygon data-side=\"left\" class=\"svg-empty-' + id + '\" points=\"281.1,129.8 364,55.7 255.5,46.8 214,-59 172.5,46.8 64,55.4 146.8,129.7 121.1,241 213.9,181.1 213.9,181 306.5,241 \" style=\"stroke-opacity: 0;\" />' +\n          '<polygon data-side=\"right\" class=\"svg-empty-' + id + '\" points=\"364,55.7 255.5,46.8 214,-59 213.9,181 306.5,241 281.1,129.8 \" style=\"stroke-opacity: 0;\" />';\n    },\n\n    getRoundedVectorPath: function(id, attrs){\n      var fullPoints = 'M520.9,336.5c-3.8-11.8-14.2-20.5-26.5-22.2l-140.9-20.5l-63-127.7 c-5.5-11.2-16.8-18.2-29.3-18.2c-12.5,0-23.8,7-29.3,18.2l-63,127.7L28,314.2C15.7,316,5.4,324.7,1.6,336.5S1,361.3,9.9,370 l102,99.4l-24,140.3c-2.1,12.3,2.9,24.6,13,32c5.7,4.2,12.4,6.2,19.2,6.2c5.2,0,10.5-1.2,15.2-3.8l126-66.3l126,66.2 c4.8,2.6,10,3.8,15.2,3.8c6.8,0,13.5-2.1,19.2-6.2c10.1-7.3,15.1-19.7,13-32l-24-140.3l102-99.4 C521.6,361.3,524.8,348.3,520.9,336.5z';\n\n      return '<path data-side=\"center\" class=\"svg-empty-' + id + '\" d=\"' + fullPoints + '\" style=\"stroke: ' + attrs.strokeColor + '; fill: transparent; \" /><path data-side=\"right\" class=\"svg-empty-' + id + '\" d=\"' + fullPoints + '\" style=\"stroke-opacity: 0;\" /><path data-side=\"left\" class=\"svg-empty-' + id + '\" d=\"M121,648c-7.3,0-14.1-2.2-19.8-6.4c-10.4-7.6-15.6-20.3-13.4-33l24-139.9l-101.6-99 c-9.1-8.9-12.4-22.4-8.6-34.5c3.9-12.1,14.6-21.1,27.2-23l140.4-20.4L232,164.6c5.7-11.6,17.3-18.8,30.2-16.8c0.6,0,1,0.4,1,1 v430.1c0,0.4-0.2,0.7-0.5,0.9l-126,66.3C132,646.6,126.6,648,121,648z\" style=\"stroke: ' + attrs.strokeColor + '; stroke-opacity: 0;\" />';\n    },\n\n    getSvgDimensions: function(starShape){\n      return (starShape === 'rounded') ? 'width=\"550px\" height=\"500.2px\" viewBox=\"0 146.8 550 500.2\" style=\"enable-background:new 0 0 550 500.2;' : 'x=\"0px\" y=\"0px\" width=\"305px\" height=\"305px\" viewBox=\"60 -62 309 309\" style=\"enable-background:new 64 -59 305 305;';\n    },\n\n    getLinearGradient: function(id, startColor, endColor, starShape){\n      var height = (starShape === 'rounded') ? 500 : 250;\n      return '<linearGradient id=\"' + id + '\" gradientUnits=\"userSpaceOnUse\" x1=\"0\" y1=\"-50\" x2=\"0\" y2=\"' + height + '\"><stop  offset=\"0\" style=\"stop-color:' + startColor + '\"/><stop  offset=\"1\" style=\"stop-color:' + endColor + '\"/> </linearGradient>';\n    },\n\n    executeCallback: function(rating, $el){\n      var callback = this.settings.callback;\n      callback(rating, $el);\n    }\n\n  };\n\n  var publicMethods = {\n\n    unload: function() {\n      var _name = 'plugin_' + pluginName;\n      var $el = $(this);\n      var $starSet = $el.data(_name).$stars;\n      $starSet.off();\n      $el.removeData(_name).remove();\n    },\n\n    setRating: function(rating, round) {\n      var _name = 'plugin_' + pluginName;\n      var $el = $(this);\n      var $plugin = $el.data(_name);\n      if( rating > $plugin.settings.totalStars || rating < 0 ) { return; }\n      if( round ){\n        rating = Math.round(rating);\n      }\n      $plugin.applyRating(rating);\n    },\n\n    getRating: function() {\n      var _name = 'plugin_' + pluginName;\n      var $el = $(this);\n      var $starSet = $el.data(_name);\n      return $starSet._state.rating;\n    },\n\n    resize: function(newSize) {\n      var _name = 'plugin_' + pluginName;\n      var $el = $(this);\n      var $starSet = $el.data(_name);\n      var $stars = $starSet.$stars;\n\n      if(newSize <= 1 || newSize > 200) {\n        console.error('star size out of bounds');\n        return;\n      }\n\n      $stars = Array.prototype.slice.call($stars);\n      $stars.forEach(function(star){\n        $(star).css({\n          'width': newSize + 'px',\n          'height': newSize + 'px'\n        });\n      });\n    },\n\n    setReadOnly: function(flag) {\n      var _name = 'plugin_' + pluginName;\n      var $el = $(this);\n      var $plugin = $el.data(_name);\n      if(flag === true){\n        $plugin.$stars.off('mouseover mouseout click');\n      } else {\n        $plugin.settings.readOnly = false;\n        $plugin.addListeners();\n      }\n    }\n\n  };\n\n\n  // Avoid Plugin.prototype conflicts\n  $.extend(Plugin.prototype, methods);\n\n  $.fn[ pluginName ] = function ( options ) {\n\n    // if options is a public method\n    if( !$.isPlainObject(options) ){\n      if( publicMethods.hasOwnProperty(options) ){\n        return publicMethods[options].apply(this, Array.prototype.slice.call(arguments, 1));\n      } else {\n        $.error('Method '+ options +' does not exist on ' + pluginName + '.js');\n      }\n    }\n\n    return this.each(function() {\n      // preventing against multiple instantiations\n      if ( !$.data( this, 'plugin_' + pluginName ) ) {\n        $.data( this, 'plugin_' + pluginName, new Plugin( this, options ) );\n      }\n    });\n  };\n\n})( jQuery, window, document );\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/jquery.star-rating-svg.js\n");

/***/ })

/******/ });